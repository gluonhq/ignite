plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.9'
    id "com.github.hierynomus.license" version "0.15.0"
    id "io.micronaut.application" version '1.0.5'
    id "maven"
}

group = 'com.gluonhq'
version = '1.2.3-SNAPSHOT'

repositories {
    mavenCentral()
    jcenter()
}

apply from: 'gradle/codeQuality.gradle'

sourceCompatibility = JavaVersion.VERSION_11

application {
//    mainClass = "com.gluonhq.ignite.samples.DaggerApp"
//    mainClass = "com.gluonhq.ignite.samples.GuiceApp"
//    mainClass = "com.gluonhq.ignite.samples.SpringApp"

    mainClass = "com.gluonhq.ignite.micronaut.FXApplication"
//    mainClass = "com.gluonhq.ignite.samples.MicronautContextApp"
}

micronaut {
    version = "2.1.3"
}

javafx {
    version = "15"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'org.openjfx.javafxplugin'
    apply from: '../gradle/codeQuality.gradle'
    apply from: '../gradle/mavenPublish.gradle'

    sourceCompatibility = JavaVersion.VERSION_11

    group 'com.gluonhq'
    version = rootProject.version
    archivesBaseName = 'ignite-' + name

    javafx {
        version = "15"
        modules = [ 'javafx.controls', 'javafx.fxml' ]
    }

    configurations {
        published
    }

    task sourcesJar(type: Jar) {
        from sourceSets.main.allSource
        classifier = 'sources'
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        from javadoc.destinationDir
        classifier = 'javadoc'
    }

    artifacts {
        archives sourcesJar, javadocJar
    }
}

dependencies {

    /// for micronaut sample
    implementation("io.micronaut:micronaut-runtime")

    // to compile sample DaggerModule
    annotationProcessor 'com.squareup.dagger:dagger-compiler:1.2.5'

    compile project(':dagger')
    compile project(':guice')
    compile project(':spring')
    compile project(':micronaut')
    compile project(':common')

}
